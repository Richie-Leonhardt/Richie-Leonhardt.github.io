<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DS on Richie&#39;s Blog</title>
    <link>https://richie-leonhardt.github.io/tags/ds/</link>
    <description>Recent content in DS on Richie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 16 Oct 2020 07:24:29 +0800</lastBuildDate><atom:link href="https://richie-leonhardt.github.io/tags/ds/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KMP算法</title>
      <link>https://richie-leonhardt.github.io/2020/10/16/kmp%E7%AE%97%E6%B3%95/</link>
      <pubDate>Fri, 16 Oct 2020 07:24:29 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/10/16/kmp%E7%AE%97%E6%B3%95/</guid>
      <description>严版数据结构教材中字符串下标从1开始，这里全部的下标都是从0开始 算法函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 int KMP(char s[], char pattern[]){ int i = 0, j = 0; int sLen</description>
    </item>
    
    <item>
      <title>二叉树操作集</title>
      <link>https://richie-leonhardt.github.io/2020/08/07/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86/</link>
      <pubDate>Fri, 07 Aug 2020 19:24:29 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/08/07/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86/</guid>
      <description>结点的数据结构 1 2 3 4 5 6 7 #define TElem int typedef struct BiTNode *BiTree; struct BiTNode{ TElem data; BiTree lchild; BiTree rchild; }; 创建二叉树 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 BiTree CreatBiTree(BiTree T){ char a[20]; scanf(&amp;#34;%s&amp;#34;,a); if(strcmp(a,&amp;#34;#&amp;#34;) == 0){ T = NULL; }else{ int input =</description>
    </item>
    
  </channel>
</rss>
