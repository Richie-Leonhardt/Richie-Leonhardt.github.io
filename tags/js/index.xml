<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Js on Richie&#39;s Blog</title>
    <link>https://richie-leonhardt.github.io/tags/js/</link>
    <description>Recent content in Js on Richie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 04 Oct 2020 09:52:25 +0800</lastBuildDate>
    
	<atom:link href="https://richie-leonhardt.github.io/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>XHTML笔记</title>
      <link>https://richie-leonhardt.github.io/2020/10/04/xhtml%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 04 Oct 2020 09:52:25 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/10/04/xhtml%E7%AC%94%E8%AE%B0/</guid>
      <description>javascript变与不变   只有数组的几个函数会在原基础上操作直接修改：一个reverse，一个sort，四个头尾操作 其他的字符串、数字、Number或者Math等，都是通过返回值来保存修改后的结果，原来的都没有变  arr = [1,2,3]; str = &amp;#39;123&amp;#39;; num = 123.45; /*变：主要是对数组的操作*/ arr.reverse(); arr.sort();	//数字和数组都是在原基础上操作  arr.push([1,2,3]);	//这里入栈/入队的是一个数组元素，入栈后是[1,2,3,[1,2,3]]或[1,2,3,Array(3)] arr.pop();	//出栈 arr.shift();	//出队 arr.unshift(1,2,3);	//队头插入，一般用不到，这样三个参数是顺序插入3个元素  /*不变,一定要通过赋值来引用或者直接嵌套着用*/ sa = arr.join(&amp;#39; | &amp;#39;); ca = arr.concat([4,5,6]); ca = arr.slice(2); sa = arr.toString(); /*Number and number all unchanged*/ ns = Number(str) sn = num.toString(); n = num.toFixed(1); /*Math all unchanged*/ fn = Math.floor(num); cn = Math.ceil(num); rn = Math.round(num); expn = Math.</description>
    </item>
    
    <item>
      <title>Web整理_JS和HTML初步</title>
      <link>https://richie-leonhardt.github.io/2020/09/04/web%E6%95%B4%E7%90%86_js%E5%92%8Chtml%E5%88%9D%E6%AD%A5/</link>
      <pubDate>Fri, 04 Sep 2020 16:47:14 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/09/04/web%E6%95%B4%E7%90%86_js%E5%92%8Chtml%E5%88%9D%E6%AD%A5/</guid>
      <description>P1 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;js test&amp;lt;/title&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;js/1.js&amp;#34;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h4&amp;gt;Cessna single_egnine&amp;lt;/h4&amp;gt; &amp;lt;form id=&amp;#34;myForm&amp;#34; auction=&amp;#34;&amp;#34;&amp;gt; &amp;lt;!-- 直接将处理的代码或者函数赋值给onclick特性 --&amp;gt; &amp;lt;!-- 两种方式： --&amp;gt; &amp;lt;!-- &amp;#34;func(parameter)&amp;#34; --&amp;gt; &amp;lt;!-- &amp;#34;js代码&amp;#34; --&amp;gt; &amp;lt;label&amp;gt;&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;colorButton&amp;#34; value=&amp;#34;red&amp;#34; onclick=&amp;#34;colorChoice(value)&amp;#34; /&amp;gt; red&amp;lt;/label&amp;gt; &amp;lt;label&amp;gt;&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;colorButton&amp;#34; value=&amp;#34;blue&amp;#34; onclick=&amp;#34;colorChoice(value)&amp;#34; /&amp;gt; blue&amp;lt;/label&amp;gt; &amp;lt;label&amp;gt;&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;colorButton&amp;#34; value=&amp;#34;green&amp;#34; onclick=&amp;#34;colorChoice(value)&amp;#34; /&amp;gt; green&amp;lt;/label&amp;gt; &amp;lt;label&amp;gt;&amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;colorButton&amp;#34; value=&amp;#34;orange&amp;#34; onclick=&amp;#34;colorChoice(value)&amp;#34; /&amp;gt; orange&amp;lt;/label&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; P1 JS function colorChoice(color){ switch(color){ case &amp;#34;red&amp;#34;:alert(&amp;#34;red&amp;#34;);break; case &amp;#34;orange&amp;#34;:alert(&amp;#34;orange&amp;#34;);break; case &amp;#34;green&amp;#34;:alert(&amp;#34;green&amp;#34;);break; case &amp;#34;blue&amp;#34;:alert(&amp;#34;blue&amp;#34;);break; default:alert(&amp;#34;error&amp;#34;); } } P2 &amp;lt;!</description>
    </item>
    
    <item>
      <title>Web整理_JS基础</title>
      <link>https://richie-leonhardt.github.io/2020/09/04/web%E6%95%B4%E7%90%86_js%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Fri, 04 Sep 2020 16:46:14 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/09/04/web%E6%95%B4%E7%90%86_js%E5%9F%BA%E7%A1%80/</guid>
      <description>// practice1 // // for (var i = 5; i &amp;lt; 16; i++) // alert(i + &amp;#34; suqare is: &amp;#34; + i** 2);  // p2 // Fibonacci // javascript中函数形参不需要类型声明var，只需要一个简单的名字就够了 function fib(/*var*/ a){ if (a === 1 || a === 2) { return 1;} else return fib(a - 1) + fib(a - 2); } // p3 // // 由于prompt返回的是字符串，所以需要 - 0来转换为数字 var p1 = prompt(&amp;#34;parameter1:&amp;#34;,&amp;#34;&amp;#34;) - 0; var p2 = prompt(&amp;#34;parameter2:&amp;#34;,&amp;#34;&amp;#34;) - 0; var p3 = prompt(&amp;#34;parameter3:&amp;#34;,&amp;#34;&amp;#34;) - 0; alert(&amp;#34;Maxium is: &amp;#34; + Math.</description>
    </item>
    
  </channel>
</rss>