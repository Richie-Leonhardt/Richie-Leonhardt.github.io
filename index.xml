<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Richie&#39;s Blog</title>
    <link>https://richie-leonhardt.github.io/</link>
    <description>Recent content on Richie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 07 Aug 2020 19:24:29 +0800</lastBuildDate>
    
	<atom:link href="https://richie-leonhardt.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>二叉树操作集</title>
      <link>https://richie-leonhardt.github.io/2020/08/07/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86/</link>
      <pubDate>Fri, 07 Aug 2020 19:24:29 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/08/07/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86/</guid>
      <description>结点的数据结构 #define TElem int typedef struct BiTNode *BiTree; struct BiTNode{ TElem data; BiTree lchild; BiTree rchild; }; 创建二叉树 BiTree CreatBiTree(BiTree T){ char a[20]; scanf(&amp;#34;%s&amp;#34;,a); if(strcmp(a,&amp;#34;#&amp;#34;) == 0){ T = NULL; }else{ int input = 0; int i,j; for (i = 0; a[i] != &amp;#39;\0&amp;#39; &amp;amp;&amp;amp; i &amp;lt; 20; ++i);	//这边两个for循环是将字符串的数字转换成int类型的 	for (i = i-1,j = 1; i &amp;gt;= 0; --i,j *= 10){ input += ((int)a[i] - 48) * j; } T = (BiTree)malloc(sizeof(struct BiTNode));	//生成根结点 	T-&amp;gt;data = input; T-&amp;gt;lchild = CreatBiTree(T-&amp;gt;lchild); //构造左子树 	T-&amp;gt;rchild = CreatBiTree(T-&amp;gt;rchild); //构造右子树  } return T; } 前序遍历 //前序遍历 void PreorderTraversal( BiTree T ){ if ( T ){ printf(&amp;#34; %d&amp;#34;,T-&amp;gt;data); PreorderTraversal(T-&amp;gt;lchild); PreorderTraversal(T-&amp;gt;rchild); } } 中序遍历 //中序遍历 void InorderTraversal( BiTree T ){ if ( T ){ InorderTraversal(T-&amp;gt;lchild); printf(&amp;#34; %d&amp;#34;,T-&amp;gt;data); InorderTraversal(T-&amp;gt;rchild); } } 后序遍历 //后序遍历 void PostorderTraversal( BiTree T ){ if ( T ){ PostorderTraversal(T-&amp;gt;lchild); PostorderTraversal(T-&amp;gt;rchild); printf(&amp;#34; %d&amp;#34;,T-&amp;gt;data); } } 非递归中序遍历 //非递归中序遍历 void InorderTraversal_NotRecursive(BiTree T){ if ( T ){ BiTree stack_arr[100]; int top = -1; while( top !</description>
    </item>
    
    <item>
      <title>2020年7月阶段反思</title>
      <link>https://richie-leonhardt.github.io/2020/07/21/2020%E5%B9%B47%E6%9C%88%E9%98%B6%E6%AE%B5%E5%8F%8D%E6%80%9D/</link>
      <pubDate>Tue, 21 Jul 2020 12:35:36 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/07/21/2020%E5%B9%B47%E6%9C%88%E9%98%B6%E6%AE%B5%E5%8F%8D%E6%80%9D/</guid>
      <description>7月事件及反思 学习上：考研暑假复习的第一个月  时间管理  时间利用不够充分，经常被一些无关紧要的事情感到心烦。 休息时间太多，可以用倒计时设置个时间。 严格控制手机使用，休息的时候能不看手机就不看手机。 极品飞车打的停不下来：应该设定一个时间，比如20分钟，然后绝不跑比赛，就瞎逛周游风一般的感觉。   英语  单词已经背了3200+，做阅读已经有初步的成效。 单词采用多次重复的方法，复习200词可以仅用10-20分钟。 基本看懂文章大意，有时会曲解文章意思，不应该求快而应该求稳。 睡前必须复习单词，这个习惯没有养成，从今天开始实行，睡前快速过一遍单词。   政治  已经听完了原理的部分。 多选题没有找到做题的立场所以错了很多。 书居然看不进去，想想办法，实在不行就直接把重要的命题点直接抄下来也行。   C语言  题刷到190多页了，总体比较简单，C语言后面不需做太多投入，看一下画的题就行了。 C语言的需要代码操作的集中处理比较省时间，否则手机写太蛋疼了，能先搁置就先搁置。   Web  七月基本没怎么看。也许可以每天看一小章，不能全给忘了。   数据结构  有些比较难的，即使难还是可以通过学习来补足的，心态要好，毕竟这些东西，我相比其他同学有很大的优势。 集中注意力一口气拿下， 真正不会的东西就这么一点，把这些搞好了，我离满分就更进一步了。 手写代码和电脑上写代码有很大差别，能手写尽量手写代码。    生活  觉得心烦的时候锻炼一下。  遗憾毫无意义，现在唯一要做的，是为了不让以后遗憾。 请一定要，拼尽全力。 </description>
    </item>
    
    <item>
      <title>排序总结_C实现</title>
      <link>https://richie-leonhardt.github.io/2020/07/14/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93_c%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 14 Jul 2020 13:46:02 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/07/14/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93_c%E5%AE%9E%E7%8E%B0/</guid>
      <description>快速排序 //快速排序 #include &amp;lt;stdio.h&amp;gt;#define N 8  //左右搜索，将比枢轴大的元素移到后面，比枢轴小的移到前面，可以通过交替找的方法将那个枢轴空出来的位置充分利用起来，不交换而采取移动的方式 int Partition(int sqList[], int low, int high){ int pivokey = sqList[low]; while( low &amp;lt; high ){ while ( low &amp;lt; high &amp;amp;&amp;amp; sqList[high] &amp;gt;= pivokey ) high--;	//因为一直往前移动搜索比枢轴小的数字，如果搜到头都没找到，则会出现越界，所以一定要加上low &amp;lt; high的条件不能少 	sqList[low] = sqList[high]; while ( low &amp;lt; high &amp;amp;&amp;amp; sqList[low] &amp;lt;= pivokey ) low++;	sqList[high] = sqList[low]; } /*最后枢轴返回位置的时候要考虑到，没执行while和执行了while的情况，执行了while就要找中间那个位置，发现high和low都行，但是若没执行while就必须low了，所以最后必须是low*/ sqList[low] = pivokey; return low; } //每次分割开来左右递归 void Qsort(int sqList[], int low, int high){ int pivoloc; if(low &amp;lt; high){ pivoloc = Partition(sqList,low,high); Qsort(sqList, low, pivoloc - 1); Qsort(sqList, pivoloc + 1,high); } } void printList(int sqList[]){ int i; for ( i = 0; i &amp;lt; N; ++i ) printf(&amp;#34;%d &amp;#34;,sqList[i] ); } int main(int argc, char const *argv[]) { int i; int sqList[N]; printf(&amp;#34;请输入8个数字，以空格隔开：&amp;#34;); for (i = 0; i &amp;lt; N; i++) scanf(&amp;#34;%d&amp;#34;,&amp;amp;sqList[i]); Qsort(sqList,0,N-1); printList(sqList); return 0; } /* example input: 3 5 2 9 6 8 3 1 */ 基数排序 /* 基数排序 * 基数排序是针对非负整数或是非正整数的序列进行的排序 * 基数排序是先根据个位数进行排序，再根据十位数进行排序，再百位数…… * 基数排序的基本过程： * 1.</description>
    </item>
    
    <item>
      <title>2020年6月阶段反思</title>
      <link>https://richie-leonhardt.github.io/2020/06/30/2020%E5%B9%B46%E6%9C%88%E9%98%B6%E6%AE%B5%E5%8F%8D%E6%80%9D/</link>
      <pubDate>Tue, 30 Jun 2020 12:35:36 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/06/30/2020%E5%B9%B46%E6%9C%88%E9%98%B6%E6%AE%B5%E5%8F%8D%E6%80%9D/</guid>
      <description>6月事件及反思 学习上 本月的很多时间花在了PS作业，期末复习，建设课程上。
  时间管理
 没有目标是主要的问题，学习学的太散。 考前的一段时间内过于放松，一天都没学习，想想不应该跟周围的同学比的，真正要比的是自己和一些看不见的敌人。 数据结构挺有意思的，可以让我复习到十一二点都不觉得困乏，想学的时候多学点。 时间的管理，有一种好的思路是番茄钟，1个半小时为一个单位，中间休息一下眼睛，番茄TODO这个软件不错，技能保证学习的效率又能促进提醒自己休息。    我不用学数学，又有C语言和数据结构的基础，我的起步比别的同学高，所以时间来不及的可能性比较小，最大的问题是能否充分利用这些时间打磨自己，一点一点进步，查漏补缺，最后无懈可击。
  英语
 单词共背了1650个，平均每天多背80个，复习150-250个单词，复习时间花的也比较长，说明可能是存在词汇量虚高的现象，应该多看看书来复习。庆幸的是好的习惯已经养成了，坚持下去，一直背单词，再有24天就可以Lv9了。 真题几乎没做，只有月初的时候做了两题完型，最近的英语复习可以开始做真题了。 阅读比较难应该慢慢来，边做边查词，找出题人的思路，套解题方法。 睡前必须复习单词。    政治
 作为平时学累了的放松的刷题刷视频，视频已经准备好了，1000题的做题本到了就可以开始刷了。    C语言
 先把好久没复习的文件操作、内存之类的再学完。 之后着重于刷题抓细节查漏补缺，也可以边刷。 刷题刷到一定程度可以真题搞起来了。    Web
 闲的没事的时候看看书看看真题。作为休息时候的读物。    数据结构
 有些题虽然难，但是我最后还是能解决。录课、写代码已经给了我不少基础。 发现中M上北航开的算法课不错，讲的很细。 冷静分析，找考点，辨陷阱。    工作上  工作可能影响了学习，处理消息也浪费时间，为了解决问题，统一处理消息，留下了电话号码。  生活上  改掉了嗜睡的毛病，一般定一个30分钟的闹钟，很少睡过一个小时。 桌子腿给锯掉了高度刚好合适，要迅速果断地改变自己周围的环境嘛。 现在的学习环境是没问题的，灯光、椅子高度这些因素都已经是最佳，能控制环境安静就控制，不能就先做些简单的，不要让环境影响到自己的学习。  哲学领悟  平心静气的做事才是最有效最准确的，冷静，精准。 很多事情不应该夹杂感情的去做，基于经验+逻辑思考，思考无结果则意识直感。 短暂的快乐不是真正的快乐，抛弃这些无关紧要的东西。 我所有做的，都是对美好生活的追求。  最后随便说点什么， 终于到了今天，我要认清现实了：之前可以不努力，因为我本身也没有目标，也对这些背诵的东西没有什么兴趣，大学三年，浮浮沉沉，但是我还是遇到使我幸福的C，C++，Java，Python，我没有成绩，没有奖项，几乎什么都没有，还一直被拿来当工具人用。但是现在，对我所活过的，这些生活，不后悔。期末考试的时候，我可以不努力，我也不需要这么高的成绩，挂科，没关系，缺考，没关系，逃课，没关系，我没有拿奖学金评优之类的目标。、、、但是现在，不努力真的不行辣！现在正是拿出自己的全力战斗的时刻，不能退缩，不能懈怠！</description>
    </item>
    
    <item>
      <title>Reflection20.06.04</title>
      <link>https://richie-leonhardt.github.io/2020/06/14/reflection20.06.04/</link>
      <pubDate>Sun, 14 Jun 2020 11:57:39 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/06/14/reflection20.06.04/</guid>
      <description>近半个月的复习   web大概看完，打印出真题，主要的考点是网络协议、HTML、CSS与JavaScript
  英语看完唐迟的阅读基础班，大概看完了钟平的逻辑英语，还有总复习没看
  实践方面：
  web大概还没有开始实际地做题、写代码等
  web中有一个缺口没学好：XML和XSLT
  英语开始做完型了，完型确实是一些基础的东西，我的逻辑题错的比较少，基本都是错的词汇题和上下文理解错误的题，总结看来基础还不够扎实
  英语初次接触阅读，阅读非常难，就像黑魂的起步一样，很不适应，被吊打
  半个月背词背了500~600个，相当于每天2小时大约40个，有待加强
    态度和思想上需要改进的地方  词汇的基础很重要，英语先抓基础，边做做完型，阅读先慢慢开始做，实践所学到的方法论 我的英语很菜的，现在还处于起步阶段，所以不能着急，慢慢来，慢慢进步，就像黑魂一样 有时候坚决维护自己的利益是比较重要的，不要放弃主导权，不要显得自己多么有牺牲精神，臭不要脸地活着才是真理，周围的人有些比较自私的，就会利用你的善良。微课的事情，放弃主导权的话，就是全程被自私的某人利用，然后作为工具人一样用完就丢弃，所以枪杆子里面取得政权，这句话说的实在是太对了。 不要管别人，按照自己的计划来。我有这个能力，无需怀疑自己，所有的事情，只要去做，最后都能成功，只是投入和时间问题，还有不断地反思纠正自己的错误朝正确的路去走。像只狼一样，像黑魂一样，随便你怎么难，只要我没有放弃，我会不停地站起来去刚，我会调整自己的战略，找到适合自己的打法，越来越熟练，越来越强，越来越强，到最后的时候我会将这些boss一个接着一个地碾压过来。  接下来的计划  web集中于重点，先自己画画导图，梳理一下零碎的知识点，把后面的练习题做完。 web查漏补缺，XML，XSLT，DTD等。可以结合真题看看。 JavaScript可以继续按照廖雪峰的那个学习。 英语将重心转移至词汇上，每天除了复习前一天的内容之外，还需要多背最低限度的60个词。 英语真题，多做完型，一旦做阅读理解，一定要认真对待，一两小时一篇属于正常现象。起步很难但是坚持一下，总会开窍。  </description>
    </item>
    
    <item>
      <title>Hugo博客维护：更新方法与变量</title>
      <link>https://richie-leonhardt.github.io/2020/06/05/hugo%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95%E4%B8%8E%E5%8F%98%E9%87%8F/</link>
      <pubDate>Fri, 05 Jun 2020 19:16:32 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/06/05/hugo%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95%E4%B8%8E%E5%8F%98%E9%87%8F/</guid>
      <description>使用$ Hugo命令编译的时候出现warning，XXX被弃用（deprecated） 这些方法在之后的hugo更新中将不能再用，所以要根据提示，或者去查官方文档，将这些方法更新。
Building sites … WARN 2020/06/05 19:13:06 Page.Hugo is deprecated and will be removed in a future release. Use the global hugo function.
WARN 2020/06/05 19:12:38 Page.UniqueID is deprecated and will be removed in a future release. Use .File.UniqueID
第一个的话，就是说Page.Hugo建议替换为全局方法hugo，所以在模板搜索.Hugo中找到相应的代码
这边只有在、layouts/partials/head.html中找到相关的：
{{ .Hugo.Generator }}
这边默认的是Page.Hugo.Grnerator
改成全局变量hugo就是：
{{ hugo.Generator }}
第二个的话同理，在
layouts/partials/article_footer.html中找到了
data-id=&amp;quot;{{ .UniqueID }}&amp;quot;
改成
data-id=&amp;quot;{{ .File.UniqueID }}&amp;quot;
就行了
如果出现问题，那么阅读官方文档搜一下有没有相关的关键词
Hugo英文文档</description>
    </item>
    
    <item>
      <title>2020年5月阶段反思</title>
      <link>https://richie-leonhardt.github.io/2020/05/30/2020%E5%B9%B45%E6%9C%88%E9%98%B6%E6%AE%B5%E5%8F%8D%E6%80%9D/</link>
      <pubDate>Sat, 30 May 2020 12:35:36 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/05/30/2020%E5%B9%B45%E6%9C%88%E9%98%B6%E6%AE%B5%E5%8F%8D%E6%80%9D/</guid>
      <description>5月事件及反思 学习上   准备考研，开始复习英语 5.21
刚开始比较慌，过于焦虑，反而学习效果下降，不过动机提上去了，之后真正意识到学习的重要性，规划好才能有好的成效
 出路永远不止一条，学习能改变一切 做好失败的准备，有二战的机会    不开学了，要在家里自学复习考研了
  规划的重要性，自律，自律，自律。
自律不是克制自己，而是寻求一种平衡，一种中庸之道，知道为什么去做，是为了寻求美好生活地去做，是遵循自己内心对美的追求，对诗意的美好生活的追求而去做，而不是强迫自己去做，是寻求平衡的进步，中庸的平衡。
  好的学习环境：改变自己的同时，尽可能动手改变周围的环境，舒服的学习环境提高学习的效率。尽量安静的环境（还是安静的环境适合学习新知，适合研究做题考试）
  追求高的效率：能一口气做完绝不拖沓。给予奖励强化学习。
  学习氛围：家里其实也不错，如果不是一个人，可以通过比赛学习的方法，加上学习的竞争性，只要有一个人在学习，另一个肯定不会一直浪。或是另一种思路，通过目标监督惩罚的方法督促学习（通过惩罚来强化学习）。
    做了一个比较水的教师修炼手册的微课
过于痛苦，脚本多次改仍不尽如人意，且受到考研焦虑的影响，只想尽快做完，水了一波，不过不参加比赛什么的，影响也并不大。内因主要是焦虑和自我崩溃，的确ae做动画并不是这么简单的一件事情。外因是队友都很懒不好好投入工作，要是队友都像我这样尽心尽力，我也不会这么累了，所以，选好队友是关键，如果队友没得选的话，只能将就一下了，要激发队友的潜力，让队友去做，有问题指导一下，根据能力统筹规划，分散任务。06.05更新，因为我网断了，队友用万彩通宵完成了动画，结果不得不去做的时候，发现还是能做好的嘛，同时让我意识到一个问题，用万彩做动画的效率比ae高出很多，不能太狭隘看不起万彩这种软件，毕竟人家的开发效率摆在那里，如果要求不是很高的话，用万彩还是能大体上令人满意的。
 有时候做不好了，那就先凑合凑合，重要的事情优先，重要不紧急的事情，需要更多平时的投入与积累，从系统层面上考虑问题，哪些事情是应该做好的，哪些事情应该给其他更重要的事情让道。 有些事情可以一口气做完，但是有些事情是分阶段的，一口气做完一个阶段。 一个人做一个项目是非常蠢的，必须分配任务，只做自己擅长的那一块，其他人能做的即使做的一般也要求他们去做，否则自己实在太累容易自我崩溃。 有些队友喜欢deadline的时候最高效率地去做，想办法制造、提前deadline，激发内在潜力，越到最后越不能放弃，越要拼一把。人事已尽，虽败犹荣。（可大多数情况下都是成功的）    工作上   缓考的重大事故，修复完毕
  选课的人满的事故，修复完毕
  遇到问题不要shy，死皮赖脸去问。犹豫，就会败北。
我平时回答了这么多问题，也是帮了同学不少忙，我受苦受累的时候，何不向同学求助呢？教务问题是老师的工作，尽快反馈问题，不要怕打扰教务老师，教务老师就是做这个的，可能有时候比较忙，不回消息，可能就是没有问题（Linux的哲学）。
  能解决问题的话，即使招惹到部分人又如何。此生光明，亦复何言。
  工作和生活上，并不像编程一样，有些问题是不可能被完美地解决的，甚至根本就解决不了，尽人事，听天命，我要做的只有这些。我尽力做，不遗憾，不后悔。
  收集信息要趁早，预见性地料到某些事情必将发生，所以为了准备迎来这些事情，就要预先收集信息，不要拖到最后紧急收集信息了。
例子：紧急收集选课满人了的信息，紧急收集缓考同学的信息。
  说话之前先思考，遣词准确，避免迷之自信，充分理解问题的来龙去脉，不知道的东西，不能凭自己的推测乱说，“资料丢失”是错误的，资料没有丢失只是没有提交到教务处。
  我现在做这条狗，不为别的，纯粹是为了服务于人，对得起我的职务，我会尽力让我配得上这个职务（虽然我一直都配得上的，不谦虚的说）。
  也许有些悲剧，也许我一开始都是错误的，也许我真正追求的是独处，安安静静做做自己的事情，活在自己的世界里。但既然都走到了现在，那何不继续走下去呢，说实话如果让我离开这个职务我会有些伤心呢，三年了，都培养出感情来了。也许对学习本身的信仰与热爱，才是我的初衷。虽然我成绩差，但是我是最能理解“学习”是一种什么概念的，尤其是学习自己喜欢的东西，知识的魅力，是无穷的。我愿成为一个终身学习者，不断提升自己，发掘更多好玩的事情。</description>
    </item>
    
    <item>
      <title>XHTML笔记</title>
      <link>https://richie-leonhardt.github.io/2020/05/30/xhtml%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 30 May 2020 09:52:25 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/05/30/xhtml%E7%AC%94%E8%AE%B0/</guid>
      <description>XHTML 是什么？   XHTML 指可扩展超文本标签语言（EXtensible HyperText Markup Language）。
  XHTML 的目标是取代 HTML。
  XHTML 与 HTML 4.01 几乎是相同的。
  XHTML 是一个 W3C 标准。
XHTML 于2000年的1月26日成为 W3C 标准。
W3C 将 XHTML 定义为最新的HTML版本。XHTML 将逐渐取代 HTML。
  与HTML的不同：   XHTML 元素必须被正确地嵌套。
  XHTML 元素必须被关闭。
  标签名必须用小写字母。
  XHTML 文档必须拥有根元素。（从XML来）
  属性名称必须小写
  属性值必须加引号
  属性不能简写，正确写法：
&amp;lt;input checked=&amp;#34;checked&amp;#34; /&amp;gt;   用 Id 属性代替 name 属性</description>
    </item>
    
    <item>
      <title>考研政治记笔记的方法</title>
      <link>https://richie-leonhardt.github.io/2020/05/02/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB%E8%AE%B0%E7%AC%94%E8%AE%B0%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 02 May 2020 09:54:13 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/05/02/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB%E8%AE%B0%E7%AC%94%E8%AE%B0%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>知识性笔记 视频链接
  有补充的知识点
可以记在书上，但是记在笔记本上更好
  分多点单独考察的知识点
这类知识点考察含义 Tips:
​	· 整理好核心意思
​	· 后期回顾看得懂就可以，越简单越好
​	· 不能抄书
​	· 可以分散在笔记的各个地方
（例子）
考试的时候分开考，所以要用关键词提炼出来理解之
如考点4马克思主义的鲜明特征：
​	科学性：正确的
​	革命性：彻底的、无产阶级立场
​	实践性：实践中产生、发展、接收检验
​	人民性：为人民的利益而奋斗
​	发展开放性：不断吸收，与时俱进
  分多点辨析考察的知识点
知识点包含多个小点，考试要求知道含义并能区分
Tip：在第2步提炼的基础上，找这几个概念之后的逻辑
（例子）
新民主主义的文化纲领：提炼，不同维度去理解，找到内在的逻辑
​	民族的：民族尊严独立，中国作风气派	（反帝维度）
​	科学的：不迷信、实事求是	（反封建维度）
​	大众的：民主的	（为人民维度）
  多点记忆型的知识点
内部分多点，要求会背会写的分析题论述点考点
思维导图：提炼归纳出核心意思，找到背后逻辑
（例子）
辛亥革命的历史意义
​	①推翻了清王朝	（军事）
​	②结束了封建君主专制制度	（政治）
​	③思想上的解放	（文化思想）
​	④社会经济、风俗习惯变化 （社会风俗）</description>
    </item>
    
    <item>
      <title>Reflection20.04</title>
      <link>https://richie-leonhardt.github.io/2020/04/28/reflection20.04/</link>
      <pubDate>Tue, 28 Apr 2020 17:50:57 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/28/reflection20.04/</guid>
      <description>凌晨两点结束了闪3，看闪4的视频看到4点睡觉。
作业不想做，意识乱麻
如何调节自己的情绪呢？  找出问题根源并解决问题 听音乐，看看书 分散注意，看一些搞笑的图片视频等 吃东西，不要过量 锻炼，举铁，是很好的发泄方式 自我催眠  20.05.01
一个上午快要过去了，作业仍然没有开始动，我发现最近的效率没有以前高了
可能是这个学习任务分析的作业我没有找到方法，上课没有听讲
看了其他同学的作业都太好了给了我一定的压力
例子难以直接模仿，套路不清楚
如何高效率的工作和学习？   一口气做完原则
 先判断任务能否一口气做完，能的话就直接做完 如果不能一口气做完的话，分解成多个小的任务  确保分成小任务对应的时间块，25 minute左右为宜 小任务结束后一定的休息，5 minute      首先状态要好，不能吃的过饱，精神和思绪都要清晰，能理性认识一切
  找到套路，构建框架，填充内容，注重格式与细节
  将问题先搞清楚，然后再动手，需求分析好才能做的好
  外部监督的番茄钟：番茄TODO
  更多待补充。。。
  </description>
    </item>
    
    <item>
      <title>图的操作整理</title>
      <link>https://richie-leonhardt.github.io/2020/04/26/%E5%9B%BE%E7%9A%84%E6%93%8D%E4%BD%9C%E6%95%B4%E7%90%86/</link>
      <pubDate>Sun, 26 Apr 2020 10:05:15 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/26/%E5%9B%BE%E7%9A%84%E6%93%8D%E4%BD%9C%E6%95%B4%E7%90%86/</guid>
      <description>图的遍历   有两种存储方式：邻接矩阵和邻接表
  在一些顶点数目比较大（一般顶点个数在1000以上）的情况下，使用邻接表而不是邻接矩阵来存储图。如果是稀疏图，用邻接表，如果是稠密图，用邻接矩阵。
深度优先搜索dfs遍历图 按深度优先的方式访问所有未被访问的结点，在结点被访问过后标记为已访问
dfs(u) { vis[u] = true; for(从u出发到能到达的所有顶点v) if(vis[v] == false) dfs(v); } dfsTrave(G) { for(G的所有结点u) if(vis[u] == false) dfs(u); } //邻接矩阵 void dfs(int u, int depth) { vis[u] = true; for(int v = 0; v &amp;lt; n; v++) { if(vis[v] == false &amp;amp;&amp;amp; G[u][v] != INF) dfs(v, depth + 1); } } void dfsTrave() { for(int u = 0; u &amp;lt; n; u++) if(vis[u] == false) dfs(u, 1); } //邻接表 void dfs(int u, int depth) { vis[u] = true; for(int u = 0; u &amp;lt; arr[u].</description>
    </item>
    
    <item>
      <title>为基于hugo的博客引入live2d</title>
      <link>https://richie-leonhardt.github.io/2020/04/16/%E4%B8%BA%E5%9F%BA%E4%BA%8Ehugo%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%BC%95%E5%85%A5live2d/</link>
      <pubDate>Thu, 16 Apr 2020 21:47:26 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/16/%E4%B8%BA%E5%9F%BA%E4%BA%8Ehugo%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%BC%95%E5%85%A5live2d/</guid>
      <description>1.在themes/你的主题/static/文件夹中新建live2d文件夹并克隆GitHub的源码
2.修改autoload.js中各个文件的路径到正确的路径，即将所有”assets“修改为“live2d”
3.确保在themes/你的主题/layouts/partials中的head.html 中已经引入了jquery.min.js，如果想要拖拽效果的话可以再引入一个1.12.1版本以上的jquery-ui.min.js
4.在footer.html中第一行插入以下代码
&amp;lt;script src=&amp;#34;{{ &amp;#34;live2d/autoload.js&amp;#34; | absURL }}&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 注意：自定义时live2d-tips.json中不能使用//添加注释
参考
[GitHub]live2d_demofghrsh大佬的博客</description>
    </item>
    
    <item>
      <title>使用批处理配置环境变量</title>
      <link>https://richie-leonhardt.github.io/2020/04/13/%E4%BD%BF%E7%94%A8%E6%89%B9%E5%A4%84%E7%90%86%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
      <pubDate>Mon, 13 Apr 2020 19:01:26 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/13/%E4%BD%BF%E7%94%A8%E6%89%B9%E5%A4%84%E7%90%86%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
      <description>设定运行路径为system32以调用注册表编辑器，之后通过修改注册表的方法来修改环境变量，对于学校机房或者网吧每次开机重置系统的情况有奇效。
@echo off path=c:\windows\system32;%path% ::F:\pathset替换为需要添加的路径即可，如果多个路径的话需要用分号隔开 set PATH=%PATH%;F:\pathset; reg add &amp;quot;HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment&amp;quot; /v &amp;quot;Path&amp;quot; /t REG_EXPAND_SZ /d &amp;quot;%PATH%&amp;quot; /f exit; </description>
    </item>
    
    <item>
      <title>Git Bash笔记</title>
      <link>https://richie-leonhardt.github.io/2020/04/13/git-bash%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 Apr 2020 18:20:41 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/13/git-bash%E7%AC%94%E8%AE%B0/</guid>
      <description>git连接账户和邮箱的设置 一般默认在用户的目录下启动了git-bash，我这边是Administrator目录下，设置账户和邮箱，下面的两个参数修改成自己的账户名和邮箱
$ git config --global user.name &amp;#34;Richie Leonhardt&amp;#34; $ git config --global user.email example@163.com 设置成功后这个目录下应该会有.gitconfig的文件，实际上，在转移到一台新的机器上后考研直接拷贝这个存有账户和邮箱的文件到相应的目录下
使用git生成ssh秘钥 $ ssh-keygen -t rsa -C &amp;#34;example@163.com&amp;#34; 三次回车之后，在目录下生成一个.ssh文件夹，里面有公钥id_rsa.pub和私钥id_rsa
将公钥内容添加到GitHub的账户(此处省略步骤)
为了确保每次打开git-bash都加载agent并且添加了私钥，在这个目录下新建.profile的一个文件，内容为以下 :
env=~/.ssh/agent.env agent_load_env () { test -f &amp;quot;$env&amp;quot; &amp;amp;&amp;amp; . &amp;quot;$env&amp;quot; &amp;gt;| /dev/null ; } agent_start () { (umask 077; ssh-agent &amp;gt;| &amp;quot;$env&amp;quot;) . &amp;quot;$env&amp;quot; &amp;gt;| /dev/null ; } agent_load_env # agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running agent_run_state=$(ssh-add -l &amp;gt;| /dev/null 2&amp;gt;&amp;amp;1; echo $?</description>
    </item>
    
    <item>
      <title>基于Hugo的博客使用笔记</title>
      <link>https://richie-leonhardt.github.io/2020/04/13/%E5%9F%BA%E4%BA%8Ehugo%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 Apr 2020 17:18:57 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/13/%E5%9F%BA%E4%BA%8Ehugo%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>创建新的随笔，在content目录下 $ hugo new newNote.md 本地查看博客，这里包括草稿，然后去除HTTP缓存 $ hugo server --buildDrafts --noHTTPCache 除此之外，如果不在本地查看的话就直接编译一下就行了
$ hugo 将所有修改从public目录提交到GitHub $ cd public $ git add * $ git commit -m &amp;#34;description for this commit&amp;#34; $ git push 如果是多台机器或者多人操作的话，在其中一台上操作提交代码之前还要pull一下来拉取最新代码
$ cd public $ git add * $ git commit -m &amp;#34;description for this commit&amp;#34; $ git pull $ git push </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://richie-leonhardt.github.io/2020/04/13/about/</link>
      <pubDate>Mon, 13 Apr 2020 12:17:25 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/13/about/</guid>
      <description>此处是李狗蛋的窝 非科班，大四在读，文科专业，周围没有可以交流的同学，非常孤单 希望通过这个博客来记录、反思自己 联系方式 QQ：2285571741
Mail：lq2285571741@gamil.com
while( live &amp;lt; end ){ love++; } </description>
    </item>
    
  </channel>
</rss>