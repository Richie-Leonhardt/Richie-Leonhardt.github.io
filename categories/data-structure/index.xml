<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Structure on Richie&#39;s Blog</title>
    <link>https://richie-leonhardt.github.io/categories/data-structure/</link>
    <description>Recent content in Data Structure on Richie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 07 Aug 2020 19:24:29 +0800</lastBuildDate>
    
	<atom:link href="https://richie-leonhardt.github.io/categories/data-structure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>二叉树操作集</title>
      <link>https://richie-leonhardt.github.io/2020/08/07/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86/</link>
      <pubDate>Fri, 07 Aug 2020 19:24:29 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/08/07/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%93%8D%E4%BD%9C%E9%9B%86/</guid>
      <description>结点的数据结构 1 2 3 4 5 6 7 #define TElem int typedef struct BiTNode *BiTree; struct BiTNode{ TElem data; BiTree lchild; BiTree rchild; }; 创建二叉树 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 BiTree CreatBiTree(BiTree T){ char a[20]; scanf(&amp;#34;%s&amp;#34;,a); if(strcmp(a,&amp;#34;#&amp;#34;) == 0){ T = NULL; }else{ int input =</description>
    </item>
    
    <item>
      <title>图的操作整理</title>
      <link>https://richie-leonhardt.github.io/2020/04/26/%E5%9B%BE%E7%9A%84%E6%93%8D%E4%BD%9C%E6%95%B4%E7%90%86/</link>
      <pubDate>Sun, 26 Apr 2020 10:05:15 +0800</pubDate>
      
      <guid>https://richie-leonhardt.github.io/2020/04/26/%E5%9B%BE%E7%9A%84%E6%93%8D%E4%BD%9C%E6%95%B4%E7%90%86/</guid>
      <description>图的遍历 有两种存储方式：邻接矩阵和邻接表 在一些顶点数目比较大（一般顶点个数在1000以上）的情况下，使用邻接表而不是邻接矩阵来存储图。如果是</description>
    </item>
    
  </channel>
</rss>